// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TryOn.API.Models;

#nullable disable

namespace TryOn.API.Migrations
{
    [DbContext(typeof(TryOnDbContext))]
    [Migration("20250522180105_AddInventarioToPrenda")]
    partial class AddInventarioToPrenda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TryOn.API.DTOs.CategoriaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CategoriaDTO");
                });

            modelBuilder.Entity("TryOn.API.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("categorias_pkey");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("TryOn.API.Models.DetallesPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad");

                    b.Property<int?>("InventarioId")
                        .HasColumnType("integer")
                        .HasColumnName("inventario_id");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedido_id");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("precio_unitario");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("subtotal");

                    b.HasKey("Id")
                        .HasName("detalles_pedido_pkey");

                    b.HasIndex(new[] { "InventarioId" }, "idx_detalles_inventario");

                    b.HasIndex(new[] { "PedidoId" }, "idx_detalles_pedido");

                    b.ToTable("detalles_pedido");
                });

            modelBuilder.Entity("TryOn.API.Models.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("cantidad");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("color");

                    b.Property<int?>("PrendaId")
                        .HasColumnType("integer")
                        .HasColumnName("prenda_id");

                    b.Property<string>("Talla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("talla");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ubicacion");

                    b.HasKey("Id")
                        .HasName("inventario_pkey");

                    b.HasIndex(new[] { "Cantidad" }, "idx_inventario_bajo_stock")
                        .HasFilter("(cantidad <= 5)");

                    b.HasIndex(new[] { "PrendaId" }, "idx_inventario_prenda");

                    b.HasIndex(new[] { "PrendaId", "Talla", "Color" }, "idx_inventario_talla_color");

                    b.HasIndex(new[] { "PrendaId", "Talla", "Color" }, "inventario_prenda_id_talla_color_key")
                        .IsUnique();

                    b.ToTable("inventario");
                });

            modelBuilder.Entity("TryOn.API.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionEnvio")
                        .HasColumnType("text")
                        .HasColumnName("direccion_envio");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_pedido")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("metodo_pago");

                    b.Property<decimal>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("total");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pedidos_pkey");

                    b.HasIndex(new[] { "Estado" }, "idx_pedidos_estado");

                    b.HasIndex(new[] { "FechaPedido" }, "idx_pedidos_fecha");

                    b.HasIndex(new[] { "UsuarioId" }, "idx_pedidos_usuario");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("TryOn.API.Models.PreferenciasUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_id");

                    b.Property<string>("ColorPreferido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("color_preferido");

                    b.Property<string>("TallaPreferida")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("talla_preferida");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("preferencias_usuario_pkey");

                    b.HasIndex("CategoriaId");

                    b.HasIndex(new[] { "UsuarioId" }, "idx_preferencias_usuario");

                    b.ToTable("preferencias_usuario");
                });

            modelBuilder.Entity("TryOn.API.Models.Prenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo");

                    b.Property<decimal>("Costo")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("imagen_url");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioVenta")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("precio_venta");

                    b.HasKey("Id")
                        .HasName("prendas_pkey");

                    b.HasIndex(new[] { "CategoriaId" }, "idx_prendas_categoria");

                    b.HasIndex(new[] { "Codigo" }, "idx_prendas_codigo");

                    b.HasIndex(new[] { "Codigo" }, "prendas_codigo_key")
                        .IsUnique();

                    b.ToTable("prendas");
                });

            modelBuilder.Entity("TryOn.API.Models.Promocione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("activa");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_id");

                    b.Property<string>("CodigoPromocion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo_promocion");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("porcentaje_descuento");

                    b.Property<int?>("PrendaId")
                        .HasColumnType("integer")
                        .HasColumnName("prenda_id");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("promociones_pkey");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("PrendaId");

                    b.HasIndex(new[] { "Activa" }, "idx_promociones_activa")
                        .HasFilter("(activa = true)");

                    b.HasIndex(new[] { "CodigoPromocion" }, "idx_promociones_codigo");

                    b.HasIndex(new[] { "FechaInicio", "FechaFin" }, "idx_promociones_fecha");

                    b.ToTable("promociones");
                });

            modelBuilder.Entity("TryOn.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<bool?>("EsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("es_admin");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("usuarios_pkey");

                    b.HasIndex(new[] { "Email" }, "idx_usuarios_email");

                    b.HasIndex(new[] { "Email" }, "usuarios_email_key")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("TryOn.API.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_venta")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("metodo_pago");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedido_id");

                    b.Property<decimal>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("total");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("ventas_pkey");

                    b.HasIndex(new[] { "FechaVenta" }, "idx_ventas_fecha");

                    b.HasIndex(new[] { "PedidoId" }, "idx_ventas_pedido");

                    b.HasIndex(new[] { "UsuarioId" }, "idx_ventas_usuario");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("TryOn.API.Models.DetallesPedido", b =>
                {
                    b.HasOne("TryOn.API.Models.Inventario", "Inventario")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("InventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("detalles_pedido_inventario_id_fkey");

                    b.HasOne("TryOn.API.Models.Pedido", "Pedido")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("detalles_pedido_pedido_id_fkey");

                    b.Navigation("Inventario");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("TryOn.API.Models.Inventario", b =>
                {
                    b.HasOne("TryOn.API.Models.Prenda", "Prenda")
                        .WithMany("Inventarios")
                        .HasForeignKey("PrendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("inventario_prenda_id_fkey");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("TryOn.API.Models.Pedido", b =>
                {
                    b.HasOne("TryOn.API.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("pedidos_usuario_id_fkey");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TryOn.API.Models.PreferenciasUsuario", b =>
                {
                    b.HasOne("TryOn.API.Models.Categoria", "Categoria")
                        .WithMany("PreferenciasUsuarios")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("preferencias_usuario_categoria_id_fkey");

                    b.HasOne("TryOn.API.Models.Usuario", "Usuario")
                        .WithMany("PreferenciasUsuarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("preferencias_usuario_usuario_id_fkey");

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TryOn.API.Models.Prenda", b =>
                {
                    b.HasOne("TryOn.API.Models.Categoria", "Categoria")
                        .WithMany("Prenda")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("prendas_categoria_id_fkey");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("TryOn.API.Models.Promocione", b =>
                {
                    b.HasOne("TryOn.API.Models.Categoria", "Categoria")
                        .WithMany("Promociones")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("promociones_categoria_id_fkey");

                    b.HasOne("TryOn.API.Models.Prenda", "Prenda")
                        .WithMany("Promociones")
                        .HasForeignKey("PrendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("promociones_prenda_id_fkey");

                    b.Navigation("Categoria");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("TryOn.API.Models.Venta", b =>
                {
                    b.HasOne("TryOn.API.Models.Pedido", "Pedido")
                        .WithMany("Venta")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("ventas_pedido_id_fkey");

                    b.HasOne("TryOn.API.Models.Usuario", "Usuario")
                        .WithMany("Venta")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("ventas_usuario_id_fkey");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TryOn.API.Models.Categoria", b =>
                {
                    b.Navigation("PreferenciasUsuarios");

                    b.Navigation("Prenda");

                    b.Navigation("Promociones");
                });

            modelBuilder.Entity("TryOn.API.Models.Inventario", b =>
                {
                    b.Navigation("DetallesPedidos");
                });

            modelBuilder.Entity("TryOn.API.Models.Pedido", b =>
                {
                    b.Navigation("DetallesPedidos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("TryOn.API.Models.Prenda", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Promociones");
                });

            modelBuilder.Entity("TryOn.API.Models.Usuario", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("PreferenciasUsuarios");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
